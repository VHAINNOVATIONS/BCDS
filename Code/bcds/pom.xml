<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>spring-boot-starter-parent</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>1.2.4.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>gov.va.vba</groupId>
	<artifactId>bcds-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>bcds-parent</name>

	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<modules>
		<module>../cdm-schema</module>
		<module>../webservices-external</module>
		<module>../bcds-api</module>
		<module>../bcds-config</module>
		<module>../bcds-impl</module>
		<module>../bcds-persistence</module>
		<module>../bcds-soap-producer</module>
		<module>../bcds-web</module>
	</modules>

	<properties>
		<!-- versions not specified here but referenced by a property variable 
			live in the actual pom.xml in the .m2 repo, which you can verify by following 
			the property variable -->
		<gatling-maven-plugin.version>2.1.5</gatling-maven-plugin.version>
		<java.version>1.8</java.version>
		<mapstruct.version>1.0.0.CR1</mapstruct.version>
		<maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
		<maven-sortpom-plugin.version>2.3.0</maven-sortpom-plugin.version>
		<maven-ear-plugin.version>2.10.1</maven-ear-plugin.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<run.addResources>false</run.addResources>
		<skipITs>${skipTests}</skipITs>
		<skipTests>false</skipTests>
		<skipUTs>${skipTests}</skipUTs>
		<HikariCP.version>2.4.3</HikariCP.version>
		<assertj-core.version>1.0.0m1</assertj-core.version>
		<awaitility.version>1.4.0</awaitility.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-lang.version>2.6</commons-lang.version>
		<gatling.version>2.1.5</gatling.version>
		<hibernate.version>4.3.6.Final</hibernate.version>
		<javax.inject.version>1</javax.inject.version>
		<joda-time-hibernate.version>1.4</joda-time-hibernate.version>
		<json-path.version>0.9.1</json-path.version>
		<liquibase-hibernate4.version>3.5</liquibase-hibernate4.version>
		<liquibase-slf4j.version>1.2.1</liquibase-slf4j.version>
		<liquibase.version>3.4.2</liquibase.version>
		<mapstruct.version>1.0.0.CR1</mapstruct.version>
		<metrics-spark-reporter.version>1.2</metrics-spark-reporter.version>
		<metrics-spring.version>3.0.4</metrics-spring.version>
		<odm.version>8.6.0.0</odm.version>
		<odm.version.short>8.6.0</odm.version.short>
		<orika.version>1.4.6</orika.version>
		<poi-ooxml.version>3.12</poi-ooxml.version>
		<spring-boot.version>1.2.4.RELEASE</spring-boot.version>
		<spring-security.version>4.0.1.RELEASE</spring-security.version>
		<spring-webservice.version>2.2.0.RELEASE</spring-webservice.version>
		<springfox.version>2.0.3</springfox.version>
		<usertype-core.version>4.0.0.GA</usertype-core.version>
		<sonar-maven-plugin.version>2.7.1</sonar-maven-plugin.version>
		<jacoco.version>0.7.5.201505241946</jacoco.version>

		<!-- Jacoco properties -->
		<jacoco.dataFile>${project.build.directory}/jacoco-data/jacoco.exec</jacoco.dataFile>
		<jacoco.agent>${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar</jacoco.agent>
		<jacoco.surefire.argLine>"-javaagent:${jacoco.agent}=destfile=${jacoco.dataFile}"</jacoco.surefire.argLine>

		<!-- Sonar properties -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${jacoco.dataFile}</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<surefire.argline>${jacoco.surefire.argLine} -server</surefire.argline>
		<sonar.exclusions>
			target/**/*.*,
			src/main/webapp/assets/**/*.*, <!-- web assets should not be analyzed -->
			src/main/webapp/bower_components/**/*.*, <!-- downloaded bower components 
				should not be analyzed -->
			src/main/webapp/dist/**/*.* <!-- generated distribution files should not 
				be analyzed -->
		</sonar.exclusions>

		<!-- Application config variables for moving/renaming application.yml files. 
			The config should be refactored into its own module to reduce duplicate config 
			so that these statements only need to exist in that config module pom.xml -->
		<config.destination>target/classes/config/application</config.destination>
		<config.destination.final>${config.destination}.yml</config.destination.final>
		<config.source>src/main/resources/config/application</config.source>
		<config.source.local>${config.source}-local.yml</config.source.local>
		<config.source.dev>${config.source}-dev.yml</config.source.dev>
		<config.source.test>${config.source}-test.yml</config.source.test>
		<config.source.prod>${config.source}-prod.yml</config.source.prod>
	</properties>

	<repositories>

		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>aide-repo</id>
			<url>https://code-tools.aide.oit.va.gov/nexus/content/groups/public</url>
		</repository>

		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven 2</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>JBoss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>

		<repository>
			<id>shibboleth</id>
			<name>Shibboleth</name>
			<url>http://svn.shibboleth.net/view/java-parent-project/trunk/</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>spring-milestones</id>
			<url>http://repo.springsource.org/libs-milestone/</url>
		</repository>

	</repositories>

	<dependencies>
	
	<dependency>
    		<groupId>wsdl4j</groupId>
    		<artifactId>wsdl4j</artifactId>
    	</dependency>
		<dependency>
	    	<groupId>javax.xml.bind</groupId>
	    	<artifactId>jaxb-api</artifactId>
	    	<version>2.2.12</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.ws</groupId>
		    <artifactId>spring-ws-core</artifactId>
		    <version>2.3.0.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
		</dependency>


		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json-path.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${HikariCP.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>tools</artifactId>
					<groupId>com.sun</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.mattbertolini</groupId>
			<artifactId>liquibase-slf4j</artifactId>
			<version>${liquibase-slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.1.0.7.0</version>
		</dependency>

		<dependency>
			<groupId>com.ryantenney.metrics</groupId>
			<artifactId>metrics-spring</artifactId>
			<version>${metrics-spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>metrics-annotation</artifactId>
					<groupId>com.codahale.metrics</groupId>
				</exclusion>
				<exclusion>
					<artifactId>metrics-core</artifactId>
					<groupId>com.codahale.metrics</groupId>
				</exclusion>
				<exclusion>
					<artifactId>metrics-healthchecks</artifactId>
					<groupId>com.codahale.metrics</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>ehcache-core</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- reporting -->
		<dependency>
			<groupId>fr.ippon.spark.metrics</groupId>
			<artifactId>metrics-spark-reporter</artifactId>
			<version>${metrics-spark-reporter.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-annotation</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-ehcache</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-graphite</artifactId>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-healthchecks</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-json</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-jvm</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlet</artifactId>
			<version>${dropwizard-metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-servlets</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>metrics-healthchecks</artifactId>
					<groupId>io.dropwizard.metrics</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.gatling.highcharts</groupId>
			<artifactId>gatling-charts-highcharts</artifactId>
			<version>${gatling.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>${joda-time-hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core-java8</artifactId>
			<version>${assertj-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>${usertype-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jetty-servlet</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- all spring boot specific dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader-tools</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<!-- security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-data</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>bcds-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>bcds-impl</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>bcds-persistence</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>cdm-schema</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>webservices-external</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>gov.va.vba</groupId>
				<artifactId>bcds-soap-producer</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>3.5.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>java</goal>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<propertyFile>src/main/resources/config/liquibase/liquibase.properties</propertyFile>
					</configuration>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>update</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-maven-plugin</artifactId>
				<version>${gatling-maven-plugin.version}</version>
				<configuration>
					<configFolder>src/test/gatling/conf</configFolder>
					<dataFolder>src/test/gatling/data</dataFolder>
					<resultsFolder>target/gatling/results</resultsFolder>
					<bodiesFolder>src/test/gatling/bodies</bodiesFolder>
					<simulationsFolder>src/test/gatling/simulations</simulationsFolder>
					<!-- This will force Gatling to ask which simulation to run This is 
						useful when you have multiple simulations -->
					<simulationClass>*</simulationClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. JHipster
								requires at least Maven 3.0
							</message>
							<version>[3.0.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an older version of Java. JHipster
								requires at least JDK
								${java.version}
							</message>
							<version>[${java.version}.0,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*Integration*.java</include>
						<include>**/*IT.java</include>
					</includes>
					<skipTests>${skipTests}</skipTests>
					<skipITs>${skipITs}</skipITs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${surefire.argline} -Xmx256m</argLine>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
					<excludes>
						<exclude>**/*Integration*.java</exclude>
						<exclude>**/*IT.java</exclude>
					</excludes>
					<skipTests>${skipUTs}</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<id>process</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.mapstruct</groupId>
						<artifactId>mapstruct-processor</artifactId>
						<version>${mapstruct.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<defaultOutputDirectory>${project.build.directory}/generated-sources</defaultOutputDirectory>
					<processors>
						<processor>org.mapstruct.ap.MappingProcessor</processor>
					</processors>
					<options>
						<mapstruct.suppressGeneratorTimestamp>true</mapstruct.suppressGeneratorTimestamp>
						<mapstruct.defaultComponentModel>spring</mapstruct.defaultComponentModel>
					</options>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006</jvmArguments>
					<arguments>
						<argument>--spring.profiles.active=local</argument>
					</arguments>
					<mainClass>gov.va.vba.Application</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
